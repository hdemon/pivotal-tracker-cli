#!/usr/bin/env node --harmony --harmony_arrow_functions --harmony_modules
'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _commander = require('commander');

var _commander2 = _interopRequireDefault(_commander);

var _cliff = require('cliff');

var _cliff2 = _interopRequireDefault(_cliff);

var _pvt = require('pvt');

var _pvt2 = _interopRequireDefault(_pvt);

var _colors = require('colors');

var _colors2 = _interopRequireDefault(_colors);

_commander2['default'].option('-p, --project-id [projectId]', 'project id').option('-t, --token [token]', 'token').option('-d, --detail', 'show detail').parse(process.argv);

_pvt2['default'].Story.setMetaInfo({
  projectId: _commander2['default'].projectId || process.env.PIVOTAL_TRACKER_DEFAULT_PROJECT_ID,
  token: _commander2['default'].token || process.env.PIVOTAL_TRACKER_TOKEN
});

var parameters = {};
var id = _commander2['default'].args[0];
if (_commander2['default'].state) parameters.with_state = _commander2['default'].state;

_pvt2['default'].Story.fetch(id).then(function (story) {
  if (_commander2['default'].detail) {
    console.log(_cliff2['default'].inspect(story));
  } else {
    var formattedStory = [[story.id, story.estimate, story.current_state, story.name]];
    console.log(_cliff2['default'].stringifyRows(formattedStory));
  }
})['catch'](function (err) {
  console.error(_colors2['default'].red(err.data.error));
});