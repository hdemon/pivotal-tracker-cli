#!/usr/bin/env node --harmony --harmony_arrow_functions --harmony_modules
'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _commander = require('commander');

var _commander2 = _interopRequireDefault(_commander);

var _cliff = require('cliff');

var _cliff2 = _interopRequireDefault(_cliff);

var _pvt = require('pvt');

var _pvt2 = _interopRequireDefault(_pvt);

var _colors = require('colors');

var _colors2 = _interopRequireDefault(_colors);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

_commander2['default'].option('-p, --project-id [projectId]', 'project id').option('-t, --token [token]', 'token').option('-s, --state [state]', 'filter by state').parse(process.argv);

_pvt2['default'].Story.setMetaInfo({
  projectId: _commander2['default'].projectId || process.env.PIVOTAL_TRACKER_DEFAULT_PROJECT_ID,
  token: _commander2['default'].token || process.env.PIVOTAL_TRACKER_TOKEN
});

var parameters = {};
var states = [/*'accepted', */'delivered', 'finished', 'started', 'rejected', 'planned', 'unstarted', 'unscheduled'];
if (_commander2['default'].state) states = _commander2['default'].state.split(',');

_pvt2['default'].Story.getList(parameters).then(function (stories) {
  var _stories = _lodash2['default'].filter(stories, function (story) {
    return _lodash2['default'].contains(states, story.current_state);
  });
  var formattedStories = _stories.map(function (story) {
    return [story.id, story.estimate, story.current_state, story.name];
  });
  formattedStories.unshift(["id", "point", "state", "name"]);
  console.log(_cliff2['default'].stringifyRows(formattedStories, ["gray"]));
})['catch'](function (err) {
  console.log(err);
  // console.error(colors.red("error: " + err.data.general_problem))
});