#!/usr/bin/env node --harmony --harmony_arrow_functions --harmony_modules

import program from 'commander'
import cliff from 'cliff'
import Pvt from 'pvt'
import colors from 'colors'
import _ from 'lodash'

program
  .option('-p, --project-id [projectId]', 'project id')
  .option('-t, --token [token]', 'token')
  .option('-s, --state [state]', 'filter by state')
  .parse(process.argv)

Pvt.Story.setMetaInfo({
  projectId: program.projectId || process.env.PIVOTAL_TRACKER_DEFAULT_PROJECT_ID,
  token: program.token || process.env.PIVOTAL_TRACKER_TOKEN
})

let parameters = {}
let states = [/*'accepted', */'delivered', 'finished', 'started', 'rejected', 'planned', 'unstarted', 'unscheduled']
if (program.state) states = program.state.split(',')

Pvt.Story.getList(parameters)
  .then((stories) => {
    let _stories = _.filter(stories, (story) => { return _.contains(states, story.current_state) })
    let formattedStories = _stories.map((story) => {
      return [story.id, story.estimate, story.current_state, story.name]
    })
    formattedStories.unshift(["id", "point", "state", "name"])
    console.log(cliff.stringifyRows(formattedStories, ["gray"]));
  }).catch(function(err) {
    console.log(err);
    // console.error(colors.red("error: " + err.data.general_problem))
  })
